
R version 2.11.1 (2010-05-31)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
This is pomp version 0.34-1

IMPORTANT NOTICE:
The default behaviors of 'simulate' and 'trajectory' have changed as of release 0.34-1. You can ensure that your code will continue to function as you intend by specifying the values of the 'times' and 't0' arguments to these functions, thus removing dependence of your code on the defaults. In the meantime, using 'simulate' or 'trajectory' in such a way as to rely on the default will produce a warning. These warnings will be removed in a future release.

See the documentation ("pomp?simulate", "pomp?trajectory") for a description of the new default behaviors.

Subscribe to the pomp-announce list (go to pomp.r-forge.r-project.org) to receive email notification about new releases of pomp including descriptions of feature additions, changes, and fixes.


> 
> set.seed(921625222L)
> 
> data(ou2)
> pf <- pfilter(ou2,Np=1000,save.states=TRUE)
> ll <- cumsum(pf$cond.loglik)
> pp <- matrix(data=coef(ou2),nrow=length(coef(ou2)),ncol=1000,dimnames=list(names(coef(ou2)),NULL))
> for (t in seq(60,90,by=10)) {
+   pp[c("x1.0","x2.0"),] <- pf$states[c("x1","x2"),,t]
+   y <- simulate(ou2,params=pp,obs=TRUE,t0=time(ou2)[t],times=time(ou2)[(t+1):(t+10)])
+   mn <- apply(y,c(1,3),mean)
+   sd <- apply(y,c(1,3),sd)
+   z <- (data.array(ou2)[,(t+1):(t+10)]-mn)/sd       ## z score
+   mse <- (data.array(ou2)[,(t+1):(t+10)]-mn)^2+sd^2 ## mean squared error
+ }
> fit <- mif(ou2,Nmif=3,rw.sd=c(alpha.1=0.1,alpha.4=0.1),Np=1000,cooling.factor=0.98,var.factor=1,ic.lag=2)
> try(
+     pfilter(fit,save.states=TRUE)
+     )
Error : pfilter error: you cannot set 'save.states' when 'object' is of class mif
> 
> 
